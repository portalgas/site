<?php$this->App->d($results, false);	if(!empty($results['Order']))	$tot_orders = count($results['Order']);else	$tot_orders = 0;if(!empty($results['PaymentsGeneric']))	$tot_generics = count($results['PaymentsGeneric']);else 	$tot_generics = 0;if(!empty($results['Storeroom']))	$tot_storeroom = count($results['Storeroom']);else 	$tot_storeroom = 0;if($tot_orders==0 && $tot_generics==0 && $tot_storeroom==0)	echo $this->element('boxMsg', ['class_msg' => 'notice', 'msg' => "Non ci sono elementi associati"]);if(count($results['Order'])>0) { 		echo '<h2>Richiesta di pagamento di ordini ('.$tot_orders.')</h2>';	echo '<div class="table-responsive"><table class="table">';	echo '<tr>';	echo '<th>'.__('N').'</th>';	echo '<th>'.__('Delivery').'</th>';	echo '<th colspan="2">'.__('Supplier').'</th>';	echo '<th>'.__('StatoElaborazione').'</th>';	echo '<th>'.__('Suppliers Organizations Referents').'</th>';    echo '<th colspan="2">'.__('Fattura').'</th>';    echo '<th style="text-align:center;">'.__('Importo totale ordine').'</th>';	echo '<th>'.__('Actions').'</th>';	echo '</tr>';		$delivery_id_old=0;        $tot_importo_fattura = 0;        $tot_importo = 0;		foreach($results['Order'] as $i => $result) {			echo '<tr>';			echo '<td>'.($i+1).'</td>';			if($result['Delivery']['id']!=$delivery_id_old)				echo '<td>'.$result['Delivery']['luogo'].', del '.$this->Time->i18nFormat($result['Delivery']['data'],"%A %e %B %Y").'</td>';			else				echo '<td></td>';			echo '<td>';			if(!empty($result['Supplier']['img1']) && file_exists(Configure::read('App.root').Configure::read('App.img.upload.content').'/'.$result['Supplier']['img1']))				echo '<img width="50" class="img-responsive-disabled userAvatar" src="'.Configure::read('App.server').Configure::read('App.web.img.upload.content').'/'.$result['Supplier']['img1'].'" />';			echo '</td>';			echo '<td>'.$result['SuppliersOrganization']['name'].'</td>';			echo '<td>';			echo $this->App->drawOrdersStateDiv($result);			echo '&nbsp;';		    echo __($result['Order']['state_code'].'-label');			echo '</td>';						echo '<td>';			echo $this->app->drawListSuppliersOrganizationsReferents($user,$result['Referenti']);			echo '</td>';			echo '<td>';			if(!empty($result['Order']['tesoriere_doc1']) && file_exists(Configure::read('App.root').Configure::read('App.doc.upload.tesoriere').DS.$user->organization['Organization']['id'].DS.$result['Order']['tesoriere_doc1'])) {				$ico = $this->App->drawDocumentIco($result['Order']['tesoriere_doc1']);				echo '<a alt="Scarica il documento" title="Scarica il documento" href="'.Configure::read('App.server').Configure::read('App.web.doc.upload.tesoriere').'/'.$user->organization['Organization']['id'].'/'.$result['Order']['tesoriere_doc1'].'" target="_blank"><img src="'.$ico.'" /></a>';			}			else				echo "";							if($result['Order']['tesoriere_fattura_importo']>0)				echo '<br />'.number_format($result['Order']['tesoriere_fattura_importo'],2,Configure::read('separatoreDecimali'),Configure::read('separatoreMigliaia')).'&nbsp;&euro;';			echo '</td>';						echo '<td>';			if(!empty($result['Order']['tesoriere_nota'])) {								echo '<button type="button" class="btn btn-info" data-toggle="modal" data-target="#order_nota_'.$result['Order']['id'].'"><i class="fa fa-2x fa-info-circle" aria-hidden="true"></i></button>';				echo '<div id="order_nota_'.$result['Order']['id'].'" class="modal fade" role="dialog">';				echo '<div class="modal-dialog">';				echo '<div class="modal-content">';				echo '<div class="modal-header">';				echo '<button type="button" class="close" data-dismiss="modal">&times;</button>';				echo '<h4 class="modal-title">Nota del referente</h4>';				echo '</div>';				echo '<div class="modal-body"><p>'.$result['Order']['tesoriere_nota'].'</p>';				echo '</div>';				echo '<div class="modal-footer">';				echo '<button type="button" class="btn btn-primary" data-dismiss="modal">'.__('Close').'</button>';				echo '</div>';				echo '</div>';				echo '</div>';				echo '</div>';			} // end if(!empty($result['Order']['tesoriere_nota']))			echo '</td>';		    echo '<td style="text-align:center;">';            echo '<br >'.number_format($result['Order']['tot_importo'],2,Configure::read('separatoreDecimali'),Configure::read('separatoreMigliaia')).'&nbsp;&euro;';            echo '</td>';            echo '<td>';			if($isSuperReferente)				echo $this->Html->link(null, ['controller'=>'Orders','action' => 'home', null, 'delivery_id='.$result['Delivery']['id'].'&order_id='.$result['Order']['id']], ['class' => 'action actionWorkflow','title' => __('Order home')]);			else				echo $this->Html->link(null, ['controller'=>'Orders','action' => 'view_public', null, 'delivery_id='.$result['Delivery']['id'].'&order_id='.$result['Order']['id']], ['class' => 'action actionView','title' => __('View Order')]);			if($result['Order']['state_code']!='CLOSE')  // in ogni caso c'e' ctrl in RequestPayments::delete_order_pre				echo $this->Html->link(null, ['controller' => 'RequestPayments' ,'action' => 'delete_order_pre', $result['RequestPaymentsOrder']['id']], ['class' => 'action actionDelete actionDeleteOrderAjax','title' => __('Delete')]);			echo '</td>';		echo '</tr>';					$delivery_id_old = $result['Delivery']['id'];			$tot_importo = ($tot_importo + $result['Order']['tot_importo']);            $tot_importo_fattura = ($tot_importo_fattura + $result['Order']['tesoriere_fattura_importo']);		} // end foreach($results['Order'] as $i => $result)		echo '<tr>';		echo '<th></th>';		echo '<th></th>';		echo '<th></th>';		echo '<th></th>';		echo '<th></th>';		echo '<th style="text-align:right;">'.('Totale').'</th>';		echo '<th>';		echo number_format($tot_importo_fattura,2,Configure::read('separatoreDecimali'),Configure::read('separatoreMigliaia')).'&nbsp;&euro;';		echo '</th>';        echo '<th></th>';        echo '<th style="text-align:center;">';        echo number_format($tot_importo,2,Configure::read('separatoreDecimali'),Configure::read('separatoreMigliaia')).'&nbsp;&euro;';        echo '</th>';        echo '<th></th>';		echo '</tr>';					echo '</table></div>';} /* * S T O R E R O O M */if($user->organization['Organization']['hasStoreroom']=='Y' && $user->organization['Organization']['hasStoreroomFrontEnd']=='Y') {	if(!empty($results['Storeroom'])) { 			echo '<h2>Richiesta di pagamento di articoli in dispensa</h2>';					echo '<div class="table-responsive"><table class="table">';		echo '<tr>';		echo '<th>'.__('N').'</th>';		echo '<th colspan="5">'.__('Delivery').'</th>';		echo '<th>Creata</th>';		echo '</tr>';				foreach($results['Storeroom'] as $i => $storeroom) {					echo '<tr>';			echo '<td>'.($i+1).'</td>';			echo '<td colspan="5">'.$storeroom['Delivery']['luogo'].', di '.$this->Time->i18nFormat($storeroom['Delivery']['data'],"%A %e %B %Y").'</td>';			echo '<td>'.$this->App->formatDateCreatedModifier($storeroom['Delivery']['created']).'</td>';			echo '</tr>';			$delivery_id_old = 0;			$user_id_old = 0;			$count=0;			$tot_importo_storeroom=0;						if(isset($storeroom['Storeroom']))			foreach($storeroom['Storeroom'] as $i => $storeroom_article) {							if($storeroom_article['Storeroom']['delivery_id']!=$delivery_id_old) {					$count=1;													echo '<tr>';					echo '<td></td>';					echo '<th>'.__('Supplier').'</th>';					echo '<th>'.__('Name').'</th>';					echo '<th>'.__('Conf').'</th>';					echo '<th>'.__('PrezzoUnita').'</th>';					echo '<th>'.__('qta').'</th>';					echo '<th>'.__('Importo').'</th>';					echo '</tr>';					}				else 					$count++;												if($storeroom_article['Storeroom']['user_id']!=$user_id_old) {					echo '<tr>';					echo '<td></td>';					echo '<td colspan="6" class="trGroup">Utente: '.$storeroom_article['User']['name'];					echo '</td>';					echo '</tr>';				}								echo '<tr>';				echo '<td></td>';				echo '<td>';				echo $storeroom_article['SuppliersOrganization']['SuppliersOrganization']['name'];				echo '</td>';				echo '<td>'; 				if($storeroom_article['Storeroom']['stato']=='LOCK') echo '<span class="stato_lock"></span> ';					echo $storeroom_article['Storeroom']['name'];				echo '</td>';				echo '<td>'.$this->App->getArticleConf($storeroom_article['Article']['qta'], $storeroom_article['Article']['um']).'</td>';				echo '<td>'.$storeroom_article['Storeroom']['prezzo_e'].'</td>';				echo '<td>'.$storeroom_article['Storeroom']['qta'].'</td>';				echo '<td>'.$this->App->getArticleImporto($storeroom_article['Storeroom']['prezzo'], $storeroom_article['Storeroom']['qta']).'</td>';				echo '</tr>';						$delivery_id_old=$storeroom_article['Storeroom']['delivery_id'];				$user_id_old=$storeroom_article['Storeroom']['user_id'];								$tot_importo_storeroom += ($storeroom_article['Storeroom']['prezzo'] * $storeroom_article['Storeroom']['qta']);							} // end loop Details Article Storeroom									} // end foreach($results['Order'] as $i => $result) 				/* 		 * TOTALE STOREROOM		 */		 $tot_importo_storeroom = number_format($tot_importo_storeroom,2,Configure::read('separatoreDecimali'),Configure::read('separatoreMigliaia'));		 		echo '<tr>';		echo '<th colspan="5" style="text-align:right;">'.('Totale').'</th>';		echo '<th>'.$tot_importo_storeroom.'&nbsp;&euro;</th>';		echo '</tr>';		 				echo '</table></div>';			 } // end if(!empty($results['Storeroom'])) } // end if($user->organization['Organization']['hasStoreroom']=='Y' && $user->organization['Organization']['hasStoreroomFrontEnd']=='Y')	if(!empty($results['PaymentsGeneric'])) { 	echo '<h2>Richiesta di pagamento di nuove voci di spesa ('.$tot_generics.')</h2>';	echo '<div class="table-responsive"><table class="table">';	echo '<tr>';	echo '<th>'.__('N').'</th>';	echo '<th>Voce di spesa</th>';	echo '<th colspan="2">'.__('User').'</th>';	echo '<th>'.__('Importo').'</th>';	echo '<th>'.__('Created').'</th>';	echo '<th>'.__('Actions').'</th>';	echo '</tr>';	$tot_importo = 0;	foreach($results['PaymentsGeneric'] as $i => $requestPaymentsGeneric) {		echo '<tr>';		echo '<td>'.($i+1).'</td>';		echo '<td>'.$requestPaymentsGeneric['RequestPaymentsGeneric']['name'].'</td>';		echo '<td>'.$requestPaymentsGeneric['User']['name'].'</td>';		echo '<td>';		if(!empty($requestPaymentsGeneric['User']['email']))			echo '<a title="'.__('Email send').'" href="mailto:'.$requestPaymentsGeneric['User']['email'].'">'.$requestPaymentsGeneric['User']['email'].'</a>';		echo '</td>';		echo '<td>'.$requestPaymentsGeneric['RequestPaymentsGeneric']['importo'].'&nbsp;&euro;</td>';		echo '<td>'.$this->Time->i18nFormat($requestPaymentsGeneric['RequestPaymentsGeneric']['created'],"%A %e %B %Y").'</td>';		echo '<td>'.$this->Html->link(null, array('controller' => 'RequestPayments' ,'action' => 'delete_generic', $requestPaymentsGeneric['RequestPaymentsGeneric']['id']),array('class' => 'action actionDelete actionDeleteGenericAjax','title' => __('Delete'))).'</td>';		echo '</tr>';			$tot_importo = ($tot_importo + $requestPaymentsGeneric['RequestPaymentsGeneric']['importo']);	} 	echo '<tr>';	echo '<th></th>';	echo '<th></th>';	echo '<th></th>';	echo '<th style="text-align:right;">'.('Totale').'</th>';	echo '<th>';	echo $tot_importo.'&nbsp;&euro;';	echo '</th>';	echo '<th></th>';	echo '<th></th>';	echo '</tr>';		echo '</table></div>';} // end if(!empty($results['PaymentsGeneric'])) ?><script type="text/javascript">$(document).ready(function() {	$('.tesoriere_nota').click(function() {		var id = $(this).attr('id');		$("#dialog-msg-"+id ).modal("open");	});		$('.actionDeleteGenericAjax').click(function() {		if(!confirm("Sei sicuro di voler cancellare la voce di spesa selezionata?")) {			return false;		}				return true;	});	$('.actionDeleteOrderAjax').click(function() {		if(!confirm("Sei sicuro di voler cancellare l'ordine selezionato?")) {			return false;		}				return true;	});		});</script>