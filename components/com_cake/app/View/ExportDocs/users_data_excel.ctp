<?php $this->PhpExcel->createWorksheet();$this->PhpExcel->setDefaultFont('Calibri', 12);$this->App->d($results);// define table cellsif($isRoot) 	$table = array(			array('label' => __('N'), 'width' => 'auto'),			array('label' => __('Code'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Username'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Name'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Cf'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Mail'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Telephone'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Address'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('City'), 'width' => 'auto', 'wrap' => true, 'filter' => true),			array('label' => __('CAP'), 'width' => 'auto', 'wrap' => true, 'filter' => true),			array('label' => __('Provincia'), 'width' => 'auto', 'wrap' => true, 'filter' => true),			array('label' => __('RegisterDate'), 'filter' => true),			array('label' => __('LastvisitDate'), 'filter' => true),			array('label' => __('Ultimo acquisto'), 'filter' => true),			array('label' => __('dataRichEnter'), 'filter' => true),			array('label' => __('dataEnter'), 'filter' => true),			array('label' => __('numDeliberaEnter'), 'filter' => true),			array('label' => __('dataDeliberaEnter'), 'filter' => true),			array('label' => __('dataRichExit'), 'filter' => true),			array('label' => __('motivoRichExit'), 'filter' => true),			array('label' => __('dataExit'), 'filter' => true),			array('label' => __('numDeliberaExit'), 'filter' => true),			array('label' => __('dataDeliberaExit'), 'filter' => true),			array('label' => __('dataRestituzCassa'), 'filter' => true),			array('label' => __('notaRestituzCassa'), 'filter' => true),			array('label' => __('Nota'), 'filter' => false),			array('label' => __('Groups'), 'width' => 'auto', 'filter' => true),			array('label' => __('Role'), 'width' => 'auto', 'filter' => true),			array('label' => __('Suppliers Organizations Referents'), 'width' => 100, 'filter' => false)	);else	$table = array(			array('label' => __('N'), 'width' => 'auto'),			array('label' => __('Code'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Username'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Name'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Cf'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Mail'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Telephone'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('Address'), 'width' => 'auto', 'wrap' => true, 'filter' => false),			array('label' => __('City'), 'width' => 'auto', 'wrap' => true, 'filter' => true),			array('label' => __('CAP'), 'width' => 'auto', 'wrap' => true, 'filter' => true),			array('label' => __('Provincia'), 'width' => 'auto', 'wrap' => true, 'filter' => true),			array('label' => __('RegisterDate'), 'filter' => true),			array('label' => __('LastvisitDate'), 'filter' => true),			array('label' => __('Ultimo acquisto'), 'filter' => true),						array('label' => __('dataRichEnter'), 'filter' => true),			array('label' => __('dataEnter'), 'filter' => true),			array('label' => __('numDeliberaEnter'), 'filter' => true),			array('label' => __('dataDeliberaEnter'), 'filter' => true),			array('label' => __('dataRichExit'), 'filter' => true),			array('label' => __('motivoRichExit'), 'filter' => true),			array('label' => __('dataExit'), 'filter' => true),			array('label' => __('numDeliberaExit'), 'filter' => true),			array('label' => __('dataDeliberaExit'), 'filter' => true),			array('label' => __('dataRestituzCassa'), 'filter' => true),			array('label' => __('notaRestituzCassa'), 'filter' => true),			array('label' => __('Nota'), 'filter' => false),			array('label' => __('Role'), 'width' => 'auto', 'filter' => true),			array('label' => __('Suppliers Organizations Referents'), 'width' => 100, 'filter' => false),	);// heading$this->PhpExcel->addTableHeader($table, ['name' => 'Cambria', 'bold' => true]);foreach($results as $numResult => $result) {	$data = [];		if(!isset($result['Profile']['hasUserFlagPrivacy']))		$result['Profile']['hasUserFlagPrivacy'] = 'N';			if(!isset($result['Profile']['hasUserRegistrationExpire']))		$result['Profile']['hasUserRegistrationExpire'] = 'N';				if ($result['User']['block'] == 0)		$result['User']['block'] = 'Y';	else		$result['User']['block'] = 'N';				if(!empty($result['User']['lastvisitDate']) && $result['User']['lastvisitDate']!=Configure::read('DB.field.datetime.empty')) 		$lastvisitDate = $this->Time->i18nFormat($result['User']['lastvisitDate'],"%e %b %Y");	else 		$lastvisitDate = "";	if(!empty($result['Cart']['date']) && $result['Cart']['date']!=Configure::read('DB.field.datetime.empty')) 		$lastCartDate = $this->Time->i18nFormat($result['Cart']['date'],"%e %b %Y");	else 		$lastCartDate = "";			$telephone = "";	if(!empty($result['Profile']['phone'])) $telephone .= $result['Profile']['phone'].' ';	if(!empty($result['Profile']['phone2'])) $telephone .= $result['Profile']['phone2'];		$address = "";	if(!empty($result['Profile']['address'])) $address = $result['Profile']['address'];        	$city = "";	if(!empty($result['Profile']['city'])) $city = $result['Profile']['city'];		$region = ""; // provincia	if(!empty($result['Profile']['region'])) $region = $result['Profile']['region'];        	$postal_code = "";  // cap	if(!empty($result['Profile']['postal_code'])) $postal_code = $result['Profile']['postal_code'];        	$data = [			($numResult+1),			$result['Profile']['codice'],			$result['User']['username'],			$result['User']['name'],			$result['Profile']['cf'],			$result['User']['email'],			$telephone,			$address,			$city,			$postal_code,			$region,	];	$data[] = $this->Time->i18nFormat($result['User']['registerDate'],"%e %b %Y");	$data[] = $lastvisitDate;	$data[] = $lastCartDate;		/*	 * data Entrata/Uscita	 */	$data[] = $result['Profile']['dataRichEnter'];	$data[] = $result['Profile']['dataEnter'];	$data[] = $result['Profile']['numDeliberaEnter'];	$data[] = $result['Profile']['dataDeliberaEnter'];	$data[] = $result['Profile']['dataRichExit'];	$data[] = $result['Profile']['motivoRichExit'];	$data[] = $result['Profile']['dataExit'];	$data[] = $result['Profile']['numDeliberaExit'];	$data[] = $result['Profile']['dataDeliberaExit'];	$data[] = $result['Profile']['dataRestituzCassa'];	$data[] = $result['Profile']['notaRestituzCassa'];	$data[] = $result['Profile']['nota'];		if($isRoot) {		$groupsTmp = "";		if(isset($result['UserGroup'])) 			foreach($result['UserGroup'] as $numUserGroup => $userGroup) 				$groupsTmp .= $userGroup['title'].' - ';				if(!empty($groupsTmp)) $groupsTmp = substr($groupsTmp, 0, (strlen($groupsTmp)-3));		$data[] = $groupsTmp;	}			if(isset($result['UserGroup'])) {		$groupsTmp = "";		foreach($result['UserGroup'] as $userGroup) {			if($userGroup['id']==Configure::read('group_id_manager'))				$groupsTmp .= __("UserGroupsManager").' - ';			if($userGroup['id']==Configure::read('group_id_manager_delivery'))				$groupsTmp .= __("UserGroupsManagerDelivery").' - ';			if($userGroup['id']==Configure::read('group_id_cassiere'))				$groupsTmp .= __("UserGroupsCassiere").' - ';			if($userGroup['id']==Configure::read('group_id_tesoriere'))				$groupsTmp .= __("UserGroupsTesoriere").' - ';			if($userGroup['id']==Configure::read('group_id_super_referent'))				$groupsTmp .= __("UserGroupsSuperReferent").' - ';			if($userGroup['id']==Configure::read('group_id_generic'))				$groupsTmp .= __("UserGroupsGeneric").' - ';						}		if(!empty($groupsTmp)) $groupsTmp = substr($groupsTmp, 0, (strlen($groupsTmp)-3));		$data[] = $groupsTmp;	}	else 		$data[] = '';				if(isset($result['SuppliersOrganization'])) {		foreach($result['SuppliersOrganization'] as $numSuppliersOrganization => $suppliersOrganization)			$data[] = $suppliersOrganization['name']; /* .' '.$result['SuppliersOrganizationsReferent'][$numSuppliersOrganization]['type']; */	}	else		$data[] = '';		$this->PhpExcel->addTableRow($data);}$this->PhpExcel->addTableFooter();$this->PhpExcel->output($fileData['fileName'].'.xlsx');?>